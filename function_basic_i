#1
#def a():
#    return 5
#print(a())
# 5

#2
#def a():
#    return 5
#print(a()+a())
#10

#3
#def a():
#    return 5
#    return 10
#print(a())
#5

#4
#def a():
#    return 5
#    print(10)
#print(a())
#5

#5copy
#def a():
#    print(5)
#x = a()
#print(x)
#5, x can't equal a() because the value is being printed and not being returned

#6
#def a(b,c):
#    print(b+c)
#print(a(1,2) + a(2,3))
#3, 5, can't add functions because not being returned

#7
#def a(b,c):
#    return str(b)+str(c)
#print(a(2,5))

#25

#8
#def a():
#    b = 100
#    print(b)
#    if b < 10:
#        return 5
#    else:
#		return 10
#    return 7
#print(a())

#100, ERROR? Why doesn't the else statement execute? I thought the return 10 would work. 

#9
#def a(b,c):
#    if b<c:
#        return 7
#    else:
#        return 14
#    return 3
#print(a(2,3))
#print(a(5,3))
#print(a(2,3) + a(5,3))

#7
#14
#21

#10
#def a(b,c):
#    return b+c
#    return 10
#print(a(3,5))

#8

#11
#b = 500
#print(b)
#def a():
#    b = 300
#    print(b)
#print(b)
#a()
#print(b)

#500, 500, 300, 500

#12
#b = 500
#print(b)
#def a():
#    b = 300
#    print(b)
#    return b
#print(b)
#a()
#print(b)

#500, 500, 300, 300 (from the return statement, but not printed), 300. Messed the last one up. So even though b is "returned" it stays as a local variable. 

#13
#b = 500
#print(b)
#def a():
#    b = 300
#    print(b)
#    return b
#print(b)
#b=a()
#print(b)

#500, 500, 300, 300

#14
#def a():
#    print(1)
#    b()
#    print(2)
#def b():
#    print(3)
#a()

#1, 3, 2

#15
def a():
    print(1)
    x = b()
    print(x)
    return 10
def b():
    print(3)
    return 5
y = a()
print(y)

#1, 3, 5, 10